@model TMC.DATA.TbUsuarios

@{
    ViewBag.Title = "Editar usuario";

}



<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" type="text/css" href="~/Estilos/EstilosGeneral.css">
    <link rel="stylesheet" type="text/css" href="~/Estilos/EstilosAdmin.css">
    <link rel="stylesheet" type="text/css" href="~/Estilos/EstilosBarraAdmin.css">


</head>



<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="main-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Editar Usuario</li>

    </ol>
</nav>

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

<div id="estiloAdmin">
    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.cedula)

            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })
                    @Html.EditorFor(model => model.cedula)*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.nombre)
            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })*@


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.apellidos)
            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })
                    @Html.DisplayFor(model => model.apellidos)*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.telefono)
            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })
                    @Html.DisplayFor(model => model.telefono)*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.correo)
            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })
                    @Html.DisplayFor(model => model.correo)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contrasenna, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })*@
                @Html.DisplayFor(model => model.contrasenna)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDRol, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.IDRol)
            <div class="col-md-10">
                @*DropDown de los roles
                        @Html.EditorFor(model => model.IDRol, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DropDownListFor(model => model.IDRol, (IEnumerable<SelectListItem>)ViewBag.ddlRoles, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.IDRol, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.estado)
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            <div class="col-md-10">


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-primary" />
                @Html.ActionLink("Regresar", "Admin_Users", "Usuario", null, new { @class = "fas fa-arrow-circle-left text-muted, btn btn-danger" })

            </div>
        </div>
    </div>
    <div>
        @Html.ActionLink("Regresar", "Admin_Users", "Usuario", null, new { @class = "fas fa-arrow-circle-left text-muted, btn btn-danger" })
    </div>
</div>
    }


<script src="https://kit.fontawesome.com/065c8b2d38.js" crossorigin="anonymous"></script>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
